# an algorithm to decrypt a RSA encryption
# cipher text
c= 87815546076588618625541560350417770089532632825977918029330610242087257411093643525039325177638300816853764504706021259937697220315137936205519768037826354458722904344896564975662243025145035289336915227143767336519280796290681474773611880512977171856849316412054226076644208436394552152773159004969353718134
# multiply of 2 prime numbers (p and q)
p = 10302475642106667177286174748379179203110671979783566041907614920791357491512205961496124805452935203805051483877828293835774330775237173299325065631516939
q = 118589654401437953224664910821196545042182186422762889538533150908125799422965164291574557037083557480558354173071200600313008749122176702587666222656178997306731800361948972467551321543536059
n= 44741915127081479325596597482215803401
# 1 < e < fi(N)
e= 65537
# with fi(N)=(p-1)(q-1)
fi = (p-1)*(q-1)
# calculating the private key: d^e mod fi == 1
d = pow(e, -1, fi)
# solve for the answer
answer = pow(c, d, n)
# print the answer
print(bytes.fromhex(hex(answer)[2:]).decode('ascii'))

